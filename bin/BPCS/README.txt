Java BPCS Steganography Project

BPCS stands for  Bit-Plane Complexity Segmentation Steganography. This algorithm was developed by Eiji Kawaguchi and Richard O. Eason at the Kyushu Institute of Technology, and a brief PDF describing it is also in the "Professional Papers" folder. This method is very efficient at storing more data than the traditional Least Significant Bit (LSB) algorithm for steganography, while ensuring that modified images are indistinguishable from the original.

The implementation is inspired by the paper "Comparing Steganography Algorithms" by Dr. Rosanne English, which is saved as a PDF in the same folder as the previous document. Chapter 8 contained the most information for how BPCS implementation works specifically, while Chapter 6 Section 2 described how to store "Header" data recording the file size and extension. However, the paper does not have any source code, and I didn't completely agree with the implementation the paper described, so I wrote my code entirely from scratch.

Only Hider and Extractor classes are required to run the program. Use Hider to hide files into the Vessel; you can copy images (PNGs) into the Vessels folder. When asked for payload files, type the names of any files separated by semicolons; you can copy any files into the Payloads folder. Generated Images with hidden files within will appear in the StegResults folder, where you can use the Extractor class to obtain hidden files; extracted files will appear in the ExtractedPayloads folder.